name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '31 03 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.1.1'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      # - name: Sign the published Docker image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   env:
      #     # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
      #     TAGS: ${{ steps.meta.outputs.tags }}
      #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #   # This step uses the identity token to provision an ephemeral certificate
      #   # against the sigstore community Fulcio instance.
      #   run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # https://github.blog/2021-12-06-safeguard-container-signing-capability-actions/
      - uses: sigstore/cosign-installer@main

      - name: Write signing key to disk (only needed for `cosign sign --key`)
        run: echo "${{ secrets.SIGNING_SECRET }}" > cosign.key

      - name: Sign container image
        run: |
          cosign sign --key cosign.key \
            ${{ steps.meta.outputs.tags }}
        env:
          COSIGN_PASSWORD: ""

      - name: Build caddy collector
        id: build-and-push-collector
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.artifacts
          build-args: docker_image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          push: false
          load: true
          tags: local-collector:latest

      - name: Create container
        run: docker create --entrypoint=/ local-collector:latest > /tmp/container-id

      - name: Copy from container to host
        run: docker cp $(cat /tmp/container-id):/ .

      - name: Caclulate sha256 of amd64
        run: echo "$(sha256sum caddy-amd64 | awk '{ print $1 }')" > caddy-amd64.sha256

      - name: Upload amd64 binary
        uses: svenstaro/upload-release-action@v2
        with:
          overwrite: true
          prerelease: true
          tag: nightly
          file: caddy-amd64

      - name: Upload amd64 sha256
        uses: svenstaro/upload-release-action@v2
        with:
          overwrite: true
          prerelease: true
          tag: nightly
          file: caddy-amd64.sha256

      - name: Caclulate sha256 of arm64
        run: echo "$(sha256sum caddy-arm64 | awk '{ print $1 }')" > caddy-arm64.sha256

      - name: Upload arm64 binary
        uses: svenstaro/upload-release-action@v2
        with:
          overwrite: true
          prerelease: true
          tag: nightly
          file: caddy-arm64

      - name: Upload arm64 sha256
        uses: svenstaro/upload-release-action@v2
        with:
          overwrite: true
          prerelease: true
          tag: nightly
          file: caddy-arm64.sha256
